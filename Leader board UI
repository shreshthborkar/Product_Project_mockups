import React, { useState } from 'react';
import { Trophy, Leaf, Award, Crown, Medal, Star, TrendingUp, Gift } from 'lucide-react';

const CarbonLeaderboard = () => {
  const [selectedPeriod, setSelectedPeriod] = useState('all');
  
  // Mock user data
  const currentUser = {
    id: 7,
    name: "You",
    totalOrders: 23,
    offsetOrders: 18,
    carbonPoints: 270,
    rank: 7,
    avatar: "üë§"
  };
  
  // Mock leaderboard data
  const leaderboardData = [
    {
      id: 1,
      name: "Priya Sharma",
      totalOrders: 45,
      offsetOrders: 45,
      carbonPoints: 675,
      rank: 1,
      avatar: "üë©‚Äçüíº",
      badge: "Eco Champion",
      streak: 45
    },
    {
      id: 2,
      name: "Rahul Kumar",
      totalOrders: 38,
      offsetOrders: 37,
      carbonPoints: 555,
      rank: 2,
      avatar: "üë®‚Äçüíª",
      badge: "Green Hero",
      streak: 12
    },
    {
      id: 3,
      name: "Anjali Gupta",
      totalOrders: 42,
      offsetOrders: 36,
      carbonPoints: 540,
      rank: 3,
      avatar: "üë©‚Äçüéì",
      badge: "Earth Saver",
      streak: 8
    },
    {
      id: 4,
      name: "Vikram Singh",
      totalOrders: 29,
      offsetOrders: 25,
      carbonPoints: 375,
      rank: 4,
      avatar: "üë®‚Äçüî¨",
      badge: "Carbon Warrior",
      streak: 15
    },
    {
      id: 5,
      name: "Sneha Patel",
      totalOrders: 31,
      offsetOrders: 24,
      carbonPoints: 360,
      rank: 5,
      avatar: "üë©‚Äçüè´",
      badge: "Green Guardian",
      streak: 6
    },
    {
      id: 6,
      name: "Arjun Mehta",
      totalOrders: 27,
      offsetOrders: 20,
      carbonPoints: 300,
      rank: 6,
      avatar: "üë®‚Äçüé®",
      badge: "Eco Friendly",
      streak: 4
    },
    currentUser,
    {
      id: 8,
      name: "Kavya Reddy",
      totalOrders: 25,
      offsetOrders: 17,
      carbonPoints: 255,
      rank: 8,
      avatar: "üë©‚Äç‚öïÔ∏è",
      badge: "Nature Lover",
      streak: 3
    },
    {
      id: 9,
      name: "Rohit Jain",
      totalOrders: 22,
      offsetOrders: 15,
      carbonPoints: 225,
      rank: 9,
      avatar: "üë®‚Äçüíº",
      badge: "Green Starter",
      streak: 2
    },
    {
      id: 10,
      name: "Deepika Roy",
      totalOrders: 20,
      offsetOrders: 12,
      carbonPoints: 180,
      rank: 10,
      avatar: "üë©‚Äçüî¨",
      badge: "Eco Beginner",
      streak: 1
    }
  ];
  
  const calculateOffsetPercentage = (offsetOrders, totalOrders) => {
    return Math.round((offsetOrders / totalOrders) * 100);
  };
  
  const getRankIcon = (rank) => {
    switch(rank) {
      case 1: return <Crown className="w-6 h-6 text-yellow-500" />;
      case 2: return <Medal className="w-6 h-6 text-gray-400" />;
      case 3: return <Award className="w-6 h-6 text-amber-600" />;
      default: return <span className="w-6 h-6 flex items-center justify-center text-sm font-bold text-gray-500">#{rank}</span>;
    }
  };
  
  const getBadgeColor = (rank) => {
    if (rank <= 3) return 'bg-gradient-to-r from-yellow-400 to-orange-500';
    if (rank <= 6) return 'bg-gradient-to-r from-green-400 to-emerald-500';
    return 'bg-gradient-to-r from-blue-400 to-cyan-500';
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 py-8">
      <div className="max-w-4xl mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center mb-4">
            <Trophy className="w-8 h-8 text-yellow-500 mr-3" />
            <h1 className="text-3xl font-bold text-gray-900">Carbon Champions</h1>
            <Leaf className="w-8 h-8 text-green-500 ml-3" />
          </div>
          <p className="text-gray-600 max-w-2xl mx-auto">
            See how you rank among eco-conscious shoppers! The more orders you offset, the higher you climb.
          </p>
        </div>

        {/* Period Filter */}
        <div className="flex justify-center mb-6">
          <div className="bg-white rounded-lg p-1 shadow-sm">
            <button
              onClick={() => setSelectedPeriod('all')}
              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                selectedPeriod === 'all' 
                  ? 'bg-green-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              All Time
            </button>
            <button
              onClick={() => setSelectedPeriod('month')}
              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                selectedPeriod === 'month' 
                  ? 'bg-green-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              This Month
            </button>
            <button
              onClick={() => setSelectedPeriod('week')}
              className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                selectedPeriod === 'week' 
                  ? 'bg-green-600 text-white' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              This Week
            </button>
          </div>
        </div>

        {/* Current User Stats */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-6 border-2 border-green-200">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-semibold text-gray-900">Your Impact</h2>
            <div className="flex items-center space-x-2">
              <Star className="w-5 h-5 text-yellow-500" />
              <span className="text-sm font-medium text-gray-600">Rank #{currentUser.rank}</span>
            </div>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-3 bg-green-50 rounded-lg">
              <div className="text-2xl font-bold text-green-600">{currentUser.offsetOrders}</div>
              <div className="text-xs text-gray-600">Orders Offset</div>
            </div>
            <div className="text-center p-3 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">{currentUser.totalOrders}</div>
              <div className="text-xs text-gray-600">Total Orders</div>
            </div>
            <div className="text-center p-3 bg-purple-50 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                {calculateOffsetPercentage(currentUser.offsetOrders, currentUser.totalOrders)}%
              </div>
              <div className="text-xs text-gray-600">Offset Rate</div>
            </div>
            <div className="text-center p-3 bg-orange-50 rounded-lg">
              <div className="text-2xl font-bold text-orange-600">{currentUser.carbonPoints}</div>
              <div className="text-xs text-gray-600">Carbon Points</div>
            </div>
          </div>
        </div>

        {/* Rewards Banner */}
        <div className="bg-gradient-to-r from-green-600 to-emerald-600 rounded-xl p-6 mb-6 text-white">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="text-lg font-semibold mb-2">üéÅ Unlock Green Rewards!</h3>
              <p className="text-green-100">Higher rank = Better discounts on eco-friendly products</p>
            </div>
            <div className="text-right">
              <div className="text-2xl font-bold">15% OFF</div>
              <div className="text-sm text-green-100">Your current discount</div>
            </div>
          </div>
        </div>

        {/* Voting Section */}
        <div className="bg-white rounded-xl shadow-lg p-6 mb-6 border-l-4 border-blue-500">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2 flex items-center">
                üó≥Ô∏è Make Your Voice Heard
              </h3>
              <p className="text-gray-600 mb-1">
                You have <span className="font-semibold text-blue-600">{currentUser.offsetOrders} voting rights</span> from your offset orders
              </p>
              <p className="text-sm text-gray-500">
                Help decide where your carbon offset contributions go - UN projects, NGOs, or local green initiatives
              </p>
            </div>
            <div className="flex flex-col items-end space-y-2">
              <div className="bg-blue-50 px-3 py-1 rounded-full">
                <span className="text-sm font-medium text-blue-700">
                  {currentUser.offsetOrders} votes available
                </span>
              </div>
              <button className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors flex items-center space-x-2">
                <span>Cast Your Vote</span>
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                </svg>
              </button>
            </div>
          </div>
        </div>

        {/* Leaderboard */}
        <div className="bg-white rounded-xl shadow-lg overflow-hidden">
          <div className="bg-gradient-to-r from-green-600 to-emerald-600 px-6 py-4">
            <h2 className="text-xl font-semibold text-white">Leaderboard</h2>
          </div>
          
          <div className="divide-y divide-gray-100">
            {leaderboardData.map((user, index) => (
              <div 
                key={user.id} 
                className={`p-4 transition-colors ${
                  user.id === currentUser.id 
                    ? 'bg-green-50 border-l-4 border-green-500' 
                    : 'hover:bg-gray-50'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-4">
                    <div className="flex items-center justify-center w-12 h-12">
                      {getRankIcon(user.rank)}
                    </div>
                    
                    <div className="text-3xl">{user.avatar}</div>
                    
                    <div>
                      <div className="flex items-center space-x-2">
                        <h3 className={`font-semibold ${
                          user.id === currentUser.id ? 'text-green-700' : 'text-gray-900'
                        }`}>
                          {user.name}
                        </h3>
                        {user.badge && (
                          <span className={`px-2 py-1 text-xs font-medium text-white rounded-full ${getBadgeColor(user.rank)}`}>
                            {user.badge}
                          </span>
                        )}
                      </div>
                      <div className="text-sm text-gray-600">
                        {user.offsetOrders}/{user.totalOrders} orders offset 
                        ({calculateOffsetPercentage(user.offsetOrders, user.totalOrders)}%)
                      </div>
                      {user.streak && (
                        <div className="text-xs text-orange-600 flex items-center mt-1">
                          <TrendingUp className="w-3 h-3 mr-1" />
                          {user.streak} order streak
                        </div>
                      )}
                    </div>
                  </div>
                  
                  <div className="text-right">
                    <div className="text-lg font-bold text-green-600">
                      {user.carbonPoints}
                    </div>
                    <div className="text-xs text-gray-500">points</div>
                    
                    {/* Progress Bar */}
                    <div className="w-24 bg-gray-200 rounded-full h-2 mt-2">
                      <div 
                        className="bg-green-500 h-2 rounded-full transition-all duration-300"
                        style={{ 
                          width: `${calculateOffsetPercentage(user.offsetOrders, user.totalOrders)}%` 
                        }}
                      ></div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Tips Section */}
        <div className="mt-8 bg-white rounded-xl shadow-lg p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
            <Gift className="w-5 h-5 text-green-600 mr-2" />
            How to Climb Higher
          </h3>
          <div className="grid md:grid-cols-3 gap-4">
            <div className="text-center p-4 bg-green-50 rounded-lg">
              <Leaf className="w-8 h-8 text-green-600 mx-auto mb-2" />
              <h4 className="font-medium text-gray-900 mb-1">Offset Every Order</h4>
              <p className="text-sm text-gray-600">Choose carbon offset at checkout to earn maximum points</p>
            </div>
            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <Star className="w-8 h-8 text-blue-600 mx-auto mb-2" />
              <h4 className="font-medium text-gray-900 mb-1">Maintain Streaks</h4>
              <p className="text-sm text-gray-600">Consecutive offset orders give you bonus points</p>
            </div>
            <div className="text-center p-4 bg-purple-50 rounded-lg">
              <Trophy className="w-8 h-8 text-purple-600 mx-auto mb-2" />
              <h4 className="font-medium text-gray-900 mb-1">Unlock Rewards</h4>
              <p className="text-sm text-gray-600">Higher ranks unlock better discounts on green products</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CarbonLeaderboard;
